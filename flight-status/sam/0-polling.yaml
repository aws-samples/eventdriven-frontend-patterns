# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

---
AWSTemplateFormatVersion: "2010-09-09"

Transform: AWS::Serverless-2016-10-31

Description: >
  re:Invent 2024
  API305 - Asynchronous frontends: Building seamless event-driven experiences

Parameters:
  ProjectName:
    Description: Name for this project
    Type: String
    Default: patterns-eventdriven-frontends

Globals:
  Function:
    Architectures:
      - arm64
    MemorySize: 256
    Timeout: 10
    Tracing: Active
    Runtime: nodejs20.x
    Tags:
      ProjectName: !Ref ProjectName
  Api:
    Auth:
      AddDefaultAuthorizerToCorsPreflight: false
      DefaultAuthorizer: AWS_IAM
    Cors:
      AllowOrigin: "'http://localhost:5173'"
      AllowHeaders: "'content-type, x-amz-security-token, x-amz-date, authorization'"
      AllowMethods: "'GET,OPTIONS'"
    TracingEnabled: true

Resources:
  #
  # Lambda function - get flight
  #
  GetFlightStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./src/functions/api/getFlightStatus.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: "{{resolve:ssm:/patterns/eventdriven/flights/table/name}}"
      Tags:
        ProjectName: !Ref ProjectName
      Environment:
        Variables:
          FlightStatusTable: "{{resolve:ssm:/patterns/eventdriven/flights/table/name}}"
          POWERTOOLS_SERVICE_NAME: getFlightStatus
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /flights/{flightId}
            Method: GET
            Auth:  # Need to set independent, global not working
              InvokeRole: NONE
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Sourcemap: false
        Target: ES2020
        EntryPoints:
          - ./src/functions/api/getFlightStatus.js
  
  GetFlightStatusFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    DependsOn: GetFlightStatusFunction
    Properties:
      RetentionInDays: 3
      LogGroupName: !Sub "/aws/lambda/${GetFlightStatusFunction}"

  #
  # Lambda function - get all flights
  #
  GetAllFlightsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./src/functions/api/getAllFlights.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: "{{resolve:ssm:/patterns/eventdriven/flights/table/name}}"
      Tags:
        ProjectName: !Ref ProjectName
      Environment:
        Variables:
          FlightStatusTable: "{{resolve:ssm:/patterns/eventdriven/flights/table/name}}"
          POWERTOOLS_SERVICE_NAME: getAllFlights
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /flights
            Method: GET
            Auth:  # Need to set independent, global not working
              InvokeRole: NONE
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Sourcemap: false
        Target: ES2020
        EntryPoints:
          - ./src/functions/api/getAllFlights.js
  
  GetAllFlightsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    DependsOn: GetAllFlightsFunction
    Properties:
      RetentionInDays: 3
      LogGroupName: !Sub "/aws/lambda/${GetAllFlightsFunction}"
  
  #
  # Allow the frontend unauth role to access GraphQL resources
  #
  PollingPatternApiAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - "{{resolve:ssm:/patterns/eventdriven/frontend/unauth/role}}"
      PolicyName: polling-pattern-allow-api
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: execute-api:Invoke
            Resource:
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessRestApi}/*"

Outputs:
  ApiEndpoint:
    Description: Endpoint for the flights services
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
