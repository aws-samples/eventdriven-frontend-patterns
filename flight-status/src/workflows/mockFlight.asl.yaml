QueryLanguage: JSONata
Comment: >-
  Mocks a flight status being updated with delays, gate changes, arrivals, and
  cancelations.
StartAt: Configure iterator
States:
  Configure iterator:
    Type: Pass
    Next: Wait
    Assign:
      flightId: '{% $states.input.flightId %}'
      flightStates: '{% $states.input.nextStates %}'
      numStates: '{% $count($states.input.nextStates) %}'
      index: 0
  Wait:
    Type: Wait
    Next: Put status event
    Seconds: '{% $floor($random() * (${MaxWaitBetweenStatusChange} - 15)) + 15 %}'
  Put status event:
    Type: Task
    Resource: arn:aws:states:::events:putEvents
    Next: More?
    Arguments:
      Entries:
        - Detail:
            flightId: '{% $flightId %}'
            event: '{% $flightStates[$index].event %}'
            eventDetails: '{% $flightStates[$index].eventDetails %}'
          DetailType: Flight status updated
          EventBusName: flights.events
          Source: flights.events
  More?:
    Type: Choice
    Default: Success
    Choices:
      - Next: Wait
        Condition: '{% ($index + 1) < $numStates %}'
        Assign:
          index: '{% $index + 1 %}'
  Success:
    Type: Succeed
